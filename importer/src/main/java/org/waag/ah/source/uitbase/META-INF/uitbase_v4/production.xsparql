declare namespace dc="http://purl.org/dc/elements/1.1/";
declare namespace rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#";
declare namespace xsd="http://www.w3.org/2001/XMLSchema#";
declare namespace ah = "http://purl.org/artsholland/1.0/";
declare namespace foaf="http://xmlns.com/foaf/0.1/";
declare namespace owl="http://www.w3.org/2002/07/owl#";

import module namespace waag = "http://waag.org" at "http://localhost:8080/static/xquery/waag.xquery";

let $productions := //production

let $baseuri := {"http://purl.org/artsholland/1.0/"}
let $baseuriUitburo := {"http://resources.uitburo.nl/"}

return
	for $production in $productions
			
		let $cidn := {$production/cidn}
		let $puri := {concat($baseuri, "productions/", $cidn)}
		let $puriUitburo := {concat($baseuriUitburo, "productions/", $cidn)}
	
		let $genre := {$production/type/@key}
		let $productionGenre := {if ($genre eq "") then () else concat("ah:ProductionGenre", waag:capitalize-first-only(data($genre)))}
			
		construct {
		
			$puri a ah:Production.			
			$puri owl:sameAs $puriUitburo.
			
			#	Title uit $production/title of uit $production/languages/language/title ?
			#	$puri dc:title {$production/title}^^xsd:string.
				
			$puri ah:hasProductionGenre $productionGenre.
			$productionGenre a ah:ProductionGenre.			
			$productionGenre rdf:label {$production/type}.
				
			#	En wat is dit dan??
			# <genres>
			# 	<genre key="FILM">Film</genre>
			# </genres>
			
			{ for $url in $production/urls//url
			
				construct {
				
					#$puri vcard:url $url.
					$puri foaf:homepage $url.
					
				}
			}.
			
			{ for $language in $production/languages//language
			
				let $locale := {$language/@locale}
				let $language-tag := {waag:get-language-tag($locale)}
				
				construct {
									 
					$puri dc:title {waag:replace-characters($language/sortname)}@{$language-tag}.
					
					$puri dc:description {waag:replace-characters($language/description)}@{$language-tag}.
					$puri ah:shortDescription {waag:replace-characters($language/short-description)}@{$language-tag}.
					
					$puri ah:party {waag:replace-characters($language/party)}@{$language-tag}.
					$puri ah:people {waag:replace-characters($language/people)}@{$language-tag}.					

				}
			}.
			
			$puri ah:hasAgeLimitLower {$production/age/lower}.
			$puri ah:hasAgeLimitUpper {$production/age/upper}.
			
			{ for $tag in $production/tags//tag
			
				construct {
										
					$puri ah:hasTag $tag.
					
				}
			}

			#	TODO:
			#	notes
			#	<country>NL</country>
			#	<language>nl_NL</language>
			#	<subtitles>en_UK</subtitles>
							
		}