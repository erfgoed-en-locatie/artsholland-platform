declare namespace dc = "http://purl.org/dc/elements/1.1/";
declare namespace rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
declare namespace xsd = "http://www.w3.org/2001/XMLSchema#";
declare namespace ah = "http://purl.org/artsholland/1.0/";
declare namespace geo = "http://www.w3.org/2003/01/geo/wgs84_pos#";
declare namespace foaf = "http://xmlns.com/foaf/0.1/";
declare namespace vcard = "http://www.w3.org/2006/vcard/ns#";
declare namespace owl = "http://www.w3.org/2002/07/owl#";

import module namespace waag = "http://waag.org" at "http://localhost:8080/static/xquery/waag.xquery";

let $locations := //location

let $baseuri := {"http://purl.org/artsholland/1.0/"}
let $baseuriUitburo := {"http://resources.uitburo.nl/"}

return
	for $location in $locations
		
		let $cidn := {$location/cidn}
		let $luri := {concat($baseuri, "venues/", $cidn)}
		let $luriUitburo := {concat($baseuriUitburo, "locations/", $cidn)}
		let $venueType := {concat("ah:VenueType", waag:capitalize-first-only($location/type/@key))}
			
		construct {
			$luri a ah:Venue.			
			$luri owl:sameAs $luriUitburo.
			
			#	TODO: deze title of uit /languages/ ??
			#$luri dc:title {waag:replace-characters($location/name)}^^xsd:string.

			$luri geo:lat {data($location/geocode/latitude)}^^xsd:decimal.
			$luri geo:long {data($location/geocode/longitude)}^^xsd:decimal.

			$luri dc:created {$location/@date-created}^^xsd:string.
			$luri dc:modified {$location/@date-changed}^^xsd:string.
			
			{ for $room in $location/rooms//room
				let $ruri := {concat($luri, "/rooms/", waag:make-uri($room))}
				construct {
					$ruri a ah:Room.
					$ruri rdf:Label {waag:replace-characters($room)}.
					$luri ah:hasRoom $ruri.
				}
			}.
			
			{ for $url in $location/urls//url
				construct {
					#$luri vcard:url $url.	
					$luri foaf:homepage $url.
				}
			}.
			
			$luri ah:hasVenueType $venueType.
			$venueType a ah:VenueType.	
			$venueType rdf:label {waag:replace-characters($location/type)}.

			# $pos is counter (http://stackoverflow.com/questions/5652397/xquery-counters-inside-a-for)
			{ for $medium at $pos in $location/media//medium				
				
				let $muri := {concat($luri, "/attachments/", $pos)}				
				construct {
				
					$luri ah:hasAttachment $muri.
					$muri a ah:Attachment.					
					$muri dc:title {waag:replace-characters($medium/title)}^^xsd:string.
					$muri dc:description {waag:replace-characters($medium/description)}^^xsd:string.
					$muri foaf:depiction {$medium/ref}.
										
					# TODO:
					#	<alt>A family again</alt>
					#	<description>Pic description</description>
				}
			}.
			
			$luri vcard:street-address {concat($location/street/name, " ", $location/street/number, $location/street/addition)}.
			$luri vcard:locality {waag:replace-characters($location/place)}.
			$luri vcard:postal-code {$location/postal-code}.

			{ for $tag in $location/tags//tag
				construct {						
					$luri ah:hasTag $tag.
				}
			}.
			
			{ for $language in $location/languages//language
			
				let $locale := {$language/@locale}
				let $language-tag := {waag:get-language-tag($locale)}
				
				construct {
									 
					$luri dc:title {waag:replace-characters($language/sortname)}@{$language-tag}.
					
					$luri dc:description {waag:replace-characters($language/description)}@{$language-tag}.
					$luri ah:shortDescription {waag:replace-characters($language/short-description)}@{$language-tag}.
					
					$luri ah:openingHours {waag:replace-characters($language/opening-hours)}@{$language-tag}.
					$luri ah:publicTransportInformation {waag:replace-characters($language/ov-info)}@{$language-tag}.					
					$luri ah:disabilityInformation {waag:replace-characters($language/handicapped-info)}@{$language-tag}.					
					$luri ah:pricingInformation {waag:replace-characters($language/pricing-information)}@{$language-tag}.

				}
			}
			
			#	TODO:
			#	editions		
		}
