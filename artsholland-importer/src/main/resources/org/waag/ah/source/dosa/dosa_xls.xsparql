declare namespace dc="http://purl.org/dc/elements/1.1/";
declare namespace os="http://linkeddata.few.vu.nl/os-amsterdam/schema/";
declare namespace osgeo="http://linkeddata.few.vu.nl/os-amsterdam/plaats/";
declare namespace qb="http://purl.org/linked-data/cube#";
declare namespace rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#";
declare namespace rdfs="http://www.w3.org/2000/01/rdf-schema#";
declare namespace xsd="http://www.w3.org/2001/XMLSchema#";
declare namespace waag="http://waag.org";

declare namespace dosa="http://www.os.amsterdam.nl/test/";

declare namespace sdmxa="http://purl.org/linked-data/sdmx/2009/attribute#";
declare namespace sdmxc="http://purl.org/linked-data/sdmx/2009/concept#";
(: declare namespace sdmxd"http://purl.org/linked-data/sdmx/2009/dimension#"; :)
declare namespace sdmxmm="http://purl.org/linked-data/sdmx/2009/measure#";

declare default element namespace "http://www.w3.org/1999/xhtml";

declare function waag:if-empty($arg, $value) {
  if (string($arg) != "")
  then data($arg)
  else $value
};

declare function waag:capitalize-first($arg as xs:string) as xs:string {
   concat(upper-case(substring($arg,1,1)), substring($arg,2))
};

declare function waag:abs-uri($arg as xs:string, $context) as xs:string {
  let $parent := resolve-QName($arg, $context)
  return concat(namespace-uri-from-QName($parent), local-name-from-QName($parent))
};

declare variable $config external; 

let $baseuri := {"http://www.os.amsterdam.nl/test/"}

let $sheets := //body/*[@class="page"]

for $sheet in $sheets

	# meting	2010 hele jaar
	# kenmerk	slachtofferschap
	# type	percentage
	# titel	Slachtofferschap totaal
	# label	% één of meer keren slachtoffer in eigen buurt
	# kop	Overig
	# bron	Monitor Leefbaarheid en Veiligheid
	# kaart 	wia2010
	# SD	8.5
	# tekst	Het percentage bewoners dat een of meer keren slachtoffer van een delict in de eigen buurt is geweest.
	# decimalen	0

  let $name := data($sheet/h1)  
	  
  let $duri := {concat($baseuri, "dataset/", $name)}
   
  let $rows := $sheet//tr[position() > 31 and td[1]!=""] 

  construct {
  
 		$duri a qb:DataSet.
    $duri rdfs:label $name.
    
    #rdfs:comment {$sheet//tr[1]/td[1]};
     
    { for $row in (1 to count($rows))
    
    	let $code := { data($rows[$row]/td[1]) }    	
    	let $naam := { data($rows[$row]/td[2]) }
    	let $value := { data($rows[$row]/td[3]) }      
          
      let $guri := { concat($baseuri, "gebied/", $code) }
      let $predicate := { concat("dataset/", $name, "/value") }
      
      construct {
      	$guri a dosa:Gebied.
        $guri dosa:code $code.
        $guri dosa:naam $naam. 
        $guri dosa:{$predicate} $value.  
          
      }
    }
    
  }